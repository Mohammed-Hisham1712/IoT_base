/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: wifi_config.proto */

#ifndef PROTOBUF_C_wifi_5fconfig_2eproto__INCLUDED
#define PROTOBUF_C_wifi_5fconfig_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct WifiConfigApSetInfoReq WifiConfigApSetInfoReq;


/* --- enums --- */


/* --- messages --- */

/*
 * WIFI AP information, ESP station will connect to this AP automatically
 */
struct  WifiConfigApSetInfoReq
{
  ProtobufCMessage base;
  char *ssid;
  char *passphrase;
};
#define WIFI_CONFIG_AP_SET_INFO_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&wifi_config_ap_set_info_req__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/* WifiConfigApSetInfoReq methods */
void   wifi_config_ap_set_info_req__init
                     (WifiConfigApSetInfoReq         *message);
size_t wifi_config_ap_set_info_req__get_packed_size
                     (const WifiConfigApSetInfoReq   *message);
size_t wifi_config_ap_set_info_req__pack
                     (const WifiConfigApSetInfoReq   *message,
                      uint8_t             *out);
size_t wifi_config_ap_set_info_req__pack_to_buffer
                     (const WifiConfigApSetInfoReq   *message,
                      ProtobufCBuffer     *buffer);
WifiConfigApSetInfoReq *
       wifi_config_ap_set_info_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   wifi_config_ap_set_info_req__free_unpacked
                     (WifiConfigApSetInfoReq *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*WifiConfigApSetInfoReq_Closure)
                 (const WifiConfigApSetInfoReq *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor wifi_config_ap_set_info_req__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_wifi_5fconfig_2eproto__INCLUDED */
